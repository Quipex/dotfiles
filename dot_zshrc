# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="candy"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
alias lpc='/Users/dmytro.rudas/Documents/scripts/list-path-content.sh'
alias dockerup='/Users/dmytro.rudas/Documents/scripts/start-docker.sh'
alias tg-alert='/Users/dmytro.rudas/Documents/scripts/my-linux-scripts/tg-alert.sh'
alias karma='/Users/dmytro.rudas/projects/revolut/Credit/karma'

alias tmpclear='rm -rf /Users/dmytro.rudas/tmp/*'
alias wpc='/Users/dmytro.rudas/Documents/scripts/write-path-content.sh'
alias sourcezsh='source ~/.zshrc'
alias wdiff='git diff master...HEAD > /Users/dmytro.rudas/tmp/git-diff.txt'

alias gdbunnel='f() { gcloud beta compute ssh db-core-2 --internal-ip --project=revolut-dev-dbs -- -L 5432:localhost:5432 };f'
alias glist='gcloud --project=revolut-dev-apps compute instances list'
alias gash='f() { gcloud --project=revolut-dev-apps beta compute ssh "$1" --internal-ip };f'
alias glistdb='gcloud --project=revolut-dev-dbs compute instances list'
alias gashdb='f() { gcloud --project=revolut-dev-dbs beta compute ssh "$1" --internal-ip };f'
alias gunnel='f() { ssh -L "$1":"$2":"$3" jumper-revolut-dev-apps -N };f'

# log searching

alias glogs='f() { gcloud logging read "logName=projects/revolut-prod-apps/logs/$1" --freshness=$2 --project=revolut-prod-apps --format="value(timestamp,severity,textPayload)" };f'
alias ggrep='f() { gcloud logging read "logName=projects/revolut-prod-apps/logs/$1" --freshness=$2 --project=revolut-prod-apps --format="value(timestamp,severity,textPayload)" | grep "$3" -C50 | less };f'
# also this command is useful
glsearch() {
  local service_name="$1"
  local date="$2"
  local expression="$3"

  gcloud logging read \
    "logName=projects/revolut-dev-apps/logs/${service_name} AND \
     timestamp >= \"${date}T00:00:00.000Z\" AND \
     timestamp <= \"${date}T23:59:59.000Z\"" \
    --format json \
  | jq '.[] | .textPayload' \
  | grep "${expression}" -C50 \
  | less
}


# similar for prod
alias glistp='gcloud --project=revolut-prod-apps compute instances list'
alias gashp='f() { gcloud --project=revolut-prod-apps beta compute ssh "$1" --internal-ip };f'
alias glistdbp='gcloud --project=revolut-prod-dbs compute instances list'
alias gashdbp='f() { gcloud --project=revolut-prod-dbs beta compute ssh "$1" --internal-ip };f'
alias gunnelp='f() { ssh -L "$1":"$2":"$3" jumper-revolut-prod-apps -N };f'

# just useful one, not related to the question

alias uncommit='git reset --soft HEAD^'

export GPG_TTY=$(tty)
export TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock
export DOCKER_HOST="unix://${HOME}/.colima/docker.sock"


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# Created by `pipx` on 2025-05-13 15:27:28
export PATH="$PATH:/Users/dmytro.rudas/Library/Python/3.9/bin"

# Created by `pipx` on 2025-05-13 15:27:30
export PATH="$PATH:/Users/dmytro.rudas/.local/bin"
